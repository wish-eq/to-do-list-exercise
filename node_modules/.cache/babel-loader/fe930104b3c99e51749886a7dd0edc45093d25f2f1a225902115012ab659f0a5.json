{"ast":null,"code":"import _slicedToArray from\"/Users/wishmarukaptak/myGitHub/to-do-list-exercise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef}from\"react\";// props = added a todo\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(props){var _useState=useState(props.edit?props.edit.value:\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];// [input from user, function to set] if editing, use editing one\n// to make website focus on typing when get in website\nvar inputRef=useRef(null);useEffect(function(){inputRef.current.focus();});// When typing in form box\nvar handleChange=function handleChange(e){setInput(e.target.value);};// When Submiting\nvar handleSubmit=function handleSubmit(e){e.preventDefault();// so web doesn't refresh\nprops.onSubmit({id:Math.floor(Math.random()*10000),text:input});setInput(\"\");// So when submit, it deletes text in box\n};return/*#__PURE__*/_jsx(\"form\",{className:\"todo-form\",onSubmit:handleSubmit,children:props.edit?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Update your item\",value:input,name:\"text\",className:\"todo-input edit\",onChange:handleChange,ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{className:\"todo-button edit\",children:\"Update\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add a todo\",value:input,name:\"text\",className:\"todo-input\",onChange:handleChange,ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{className:\"todo-button\",children:\"Add\"})]})});}export default TodoForm;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","TodoForm","props","_useState","edit","value","_useState2","_slicedToArray","input","setInput","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","children","type","placeholder","name","onChange","ref"],"sources":["/Users/wishmarukaptak/myGitHub/to-do-list-exercise/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\n// props = added a todo\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\"); // [input from user, function to set] if editing, use editing one\n\n  // to make website focus on typing when get in website\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  // When typing in form box\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n  // When Submiting\n  const handleSubmit = (e) => {\n    e.preventDefault(); // so web doesn't refresh\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\"); // So when submit, it deletes text in box\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Update your item\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input edit\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button edit\">Update</button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Add a todo\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button\">Add</button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":"wIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAE1D;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,QAAQA,CAACC,KAAK,CAAE,CACvB,IAAAC,SAAA,CAA0BX,QAAQ,CAACU,KAAK,CAACE,IAAI,CAAGF,KAAK,CAACE,IAAI,CAACC,KAAK,CAAG,EAAE,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAJ,SAAA,IAA/DK,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAAkD;AAExE;AACA,GAAM,CAAAI,QAAQ,CAAGhB,MAAM,CAAC,IAAI,CAAC,CAC7BD,SAAS,CAAC,UAAM,CACdiB,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,CAC1B,CAAC,CAAC,CAEF;AACA,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAK,CAC1BL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACV,KAAK,CAAC,CAC1B,CAAC,CACD;AACA,GAAM,CAAAW,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIF,CAAC,CAAK,CAC1BA,CAAC,CAACG,cAAc,CAAC,CAAC,CAAE;AAEpBf,KAAK,CAACgB,QAAQ,CAAC,CACbC,EAAE,CAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,KAAK,CAAC,CACrCC,IAAI,CAAEf,KACR,CAAC,CAAC,CAEFC,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChB,CAAC,CAED,mBACEb,IAAA,SAAM4B,SAAS,CAAC,WAAW,CAACN,QAAQ,CAAEF,YAAa,CAAAS,QAAA,CAChDvB,KAAK,CAACE,IAAI,cACTJ,KAAA,CAAAF,SAAA,EAAA2B,QAAA,eACE7B,IAAA,UACE8B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,kBAAkB,CAC9BtB,KAAK,CAAEG,KAAM,CACboB,IAAI,CAAC,MAAM,CACXJ,SAAS,CAAC,iBAAiB,CAC3BK,QAAQ,CAAEhB,YAAa,CACvBiB,GAAG,CAAEpB,QAAS,CACf,CAAC,cACFd,IAAA,WAAQ4B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,QAAM,CAAQ,CAAC,EACpD,CAAC,cAEHzB,KAAA,CAAAF,SAAA,EAAA2B,QAAA,eACE7B,IAAA,UACE8B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,YAAY,CACxBtB,KAAK,CAAEG,KAAM,CACboB,IAAI,CAAC,MAAM,CACXJ,SAAS,CAAC,YAAY,CACtBK,QAAQ,CAAEhB,YAAa,CACvBiB,GAAG,CAAEpB,QAAS,CACf,CAAC,cACFd,IAAA,WAAQ4B,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,KAAG,CAAQ,CAAC,EAC5C,CACH,CACG,CAAC,CAEX,CAEA,cAAe,CAAAxB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}