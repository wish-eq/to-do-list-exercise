{"ast":null,"code":"var _jsxFileName = \"/Users/wishmarukaptak/myGitHub/to-do-list-exercise/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// props = added a todo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoForm(props) {\n  _s();\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\"); // [input from user, function to set] if editing, use editing one\n\n  // to make website focus on typing when get in website\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  // When typing in form box\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  // When Submiting\n  const handleSubmit = e => {\n    // e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\"); // So when submit, it deletes text in box\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your item\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input edit\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"7XuUZj94ShAYXwsBcW+3ru872BQ=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoForm","props","_s","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","onSubmit","id","Math","floor","random","text","className","children","type","placeholder","name","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wishmarukaptak/myGitHub/to-do-list-exercise/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\n// props = added a todo\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\"); // [input from user, function to set] if editing, use editing one\n\n  // to make website focus on typing when get in website\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  // When typing in form box\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n  // When Submiting\n  const handleSubmit = (e) => {\n    // e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\"); // So when submit, it deletes text in box\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Update your item\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input edit\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button edit\">Update</button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Add a todo\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button\">Add</button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;;AAE1D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACQ,KAAK,CAACI,IAAI,GAAGJ,KAAK,CAACI,IAAI,CAACC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;;EAExE;EACA,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC7BD,SAAS,CAAC,MAAM;IACda,QAAQ,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BP,QAAQ,CAACO,CAAC,CAACC,MAAM,CAACN,KAAK,CAAC;EAC1B,CAAC;EACD;EACA,MAAMO,YAAY,GAAIF,CAAC,IAAK;IAC1B;;IAEAV,KAAK,CAACa,QAAQ,CAAC;MACbC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;MACrCC,IAAI,EAAEhB;IACR,CAAC,CAAC;IAEFC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;;EAED,oBACEP,OAAA;IAAMuB,SAAS,EAAC,WAAW;IAACN,QAAQ,EAAED,YAAa;IAAAQ,QAAA,EAChDpB,KAAK,CAACI,IAAI,gBACTR,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACExB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BjB,KAAK,EAAEH,KAAM;QACbqB,IAAI,EAAC,MAAM;QACXJ,SAAS,EAAC,iBAAiB;QAC3BK,QAAQ,EAAEf,YAAa;QACvBgB,GAAG,EAAEnB;MAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFjC,OAAA;QAAQuB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACpD,CAAC,gBAEHjC,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACExB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBjB,KAAK,EAAEH,KAAM;QACbqB,IAAI,EAAC,MAAM;QACXJ,SAAS,EAAC,YAAY;QACtBK,QAAQ,EAAEf,YAAa;QACvBgB,GAAG,EAAEnB;MAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFjC,OAAA;QAAQuB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC5C;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAAC5B,EAAA,CAxDQF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA0DjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}